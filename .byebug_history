c
question_params
c
questions
c
licensestr
c
licensetime
licensestr
c
licensestr
c
licensestr
c
@cpuids
c
@cpuids
c
@cpuids
c
@cpucount
@cpuids
cpu_dis
c
@licenses
license
c
@licenses
c
@licenses
c
@licenses.count
c
params[:licensetime]
params[:licensenum]
license
lastcpuid
@licenses == nil
@licenses
c
userid
c
userid
c
userid.to_i
userid
c
userid
c
userid
c
userid
c
questions
c
userid
questions
amounts
userid
c
q
@errcounts.count()
c
@errcounts
q
myerr
@errcounts
q
@errcounts
myerr
c
@errcounts
q
c
@errcounts
myerr
c
myerr
@errcounts
myerr
c
myerr
c
myerr
c
@errcounts
c
loc
c
loc
c
arr
c
arr
c
arr
c
arr
c
ooo
c
login
newpassword
newpassowrd
oldpassword
c
oldpassword
c
oldpassword
c
licensestr
c
loc
c
loc
c
loc
c
loc
c
request.body
c
request.body
c
request.body
c
validate
validae
login
loc
c
location_json
c
loc
c
loc
c
loc
c
mytest
c
mytest
c
mytest
c
test
mytest
test
c
mytest
c
test
mytest
c
mytest
test
location
mytest
c
mytest
c
mytest
c
test
c
test
c
location
c
location
request.body
c
request.body
c
request
c
response
c
conn
c
conn
response
content
c
response.body
resquest.body
response
respone
c
request
request.body
reponse.body
response
conn
c
conn
c
response.body
c
response.body
response
Response.body
Response
c
getip
conn.get
conn
req.headers
logger
c
conn.put
conn.adapter
conn
resopnse
request
response
conn
c
req
conn.get
conn
req
conn
req
reponse
c
faraday.adapter
faraday.response
faraday.request
faraday
c
req
req.body
req.headers
req.params
req.url
req
c
req
c
conn
c
myvalidate
c
myvalidate
c
num
mystep
c
step
c
@lastuser
@lastuser.length
temuser.length
temuser
c
